# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@DISABLE_BINDINGS_FALSE@@HAVE_SWIG_PYTHON_TRUE@am__append_1 = bindings
@HAVE_MAKEINFO_TRUE@am__append_2 = doc
@DISABLE_BINDINGS_TRUE@am__append_3 = --disable-bindings
# fragile, serial-tests only. SPEC_LOG_COMPILER does not work there,
# and parallel cannot do srcdir TESTS
@HAVE_SHELLCHECK_TRUE@am__append_4 = log dwg dxf json svg rw logs-all.sh dynapi_test_all.sh unit_testing_all.sh \
@HAVE_SHELLCHECK_TRUE@	 $(srcdir)/json-check $(srcdir)/dxf-check $(srcdir)/dxfb-check \
@HAVE_SHELLCHECK_TRUE@	 $(srcdir)/dxf-allcvt.sh $(srcdir)/test-dxf.sh $(srcdir)/unknown.sh \
@HAVE_SHELLCHECK_TRUE@         programs/dwgfilter \
@HAVE_SHELLCHECK_TRUE@	 programs/alive.test programs/dxf.test programs/json.test programs/svg.test \
@HAVE_SHELLCHECK_TRUE@	 $(srcdir)/llvmfuzz_standalone_tz.sh $(srcdir)/llvmfuzz_standalone_data.sh \
@HAVE_SHELLCHECK_TRUE@	 examples/dwgadd_test.sh

# TEST_EXTENSIONS = .sh
# SPEC_LOG_COMPILER = $(SHELLCHECK)
# serial-tests only, see above. only with parallel-tests we can do both
@HAVE_RPMLINT_TRUE@@HAVE_SHELLCHECK_FALSE@am__append_5 = $(srcdir)/libredwg.spec
@ENABLE_GCOV_TRUE@am__append_6 = codecov_io.sh *.gcov
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_add_fortify_source.m4 \
	$(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/m4/ax_c_restrict.m4 \
	$(top_srcdir)/m4/ax_check_aligned_access_required.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compile_check_sizeof.m4 \
	$(top_srcdir)/m4/ax_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_cflags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_gir.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_ldflags.m4 \
	$(top_srcdir)/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/m4/ax_include_strcasecmp.m4 \
	$(top_srcdir)/m4/ax_is_release.m4 \
	$(top_srcdir)/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/m4/ax_printf_size_t.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/ax_swig_python.m4 \
	$(top_srcdir)/m4/ax_valgrind_check.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(include_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES = libredwg.pc vcpkg.json bindings/perl/Makefile.PL \
	logs-all.sh log dwg dxf json geojson svg rw dynapi_test_all.sh \
	unit_testing_all.sh
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pcdatadir)" "$(DESTDIR)$(includedir)"
DATA = $(pcdata_DATA)
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir distdir-am dist dist-all distcheck
am__extra_recursive_targets = check-valgrind-recursive \
	check-valgrind-memcheck-recursive \
	check-valgrind-helgrind-recursive check-valgrind-drd-recursive \
	check-valgrind-sgcheck-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/dwg.in \
	$(srcdir)/dxf.in $(srcdir)/dynapi_test_all.sh.in \
	$(srcdir)/geojson.in $(srcdir)/json.in \
	$(srcdir)/libredwg.pc.in $(srcdir)/log.in $(srcdir)/rw.in \
	$(srcdir)/svg.in $(srcdir)/unit_testing_all.sh.in \
	$(srcdir)/vcpkg.json.in \
	$(top_srcdir)/bindings/perl/Makefile.PL.in \
	$(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.rpath \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing AUTHORS COPYING ChangeLog \
	INSTALL NEWS README TODO build-aux/compile \
	build-aux/config.guess build-aux/config.rpath \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/mdate-sh build-aux/missing \
	build-aux/py-compile build-aux/texinfo.tex
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.xz
GZIP_ENV = --best
DIST_TARGETS = dist-xz dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AM_TESTS_ENVIRONMENT = @AM_TESTS_ENVIRONMENT@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AX_SWIG_PYTHON_CPPFLAGS = @AX_SWIG_PYTHON_CPPFLAGS@
AX_SWIG_PYTHON_OPT = @AX_SWIG_PYTHON_OPT@
BASH = @BASH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLANG_FORMAT = @CLANG_FORMAT@
CLANG_TIDY = @CLANG_TIDY@
CPP = @CPP@
CPPCHECK = @CPPCHECK@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CYGPATH_W = @CYGPATH_W@
DEBUG_CLASSES = @DEBUG_CLASSES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLE_JSON = @DISABLE_JSON@
DISABLE_WRITE = @DISABLE_WRITE@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILECMD = @FILECMD@
GCOV = @GCOV@
GCOV_CFLAGS = @GCOV_CFLAGS@
GCOV_LIBS = @GCOV_LIBS@
GEOJSONHINT = @GEOJSONHINT@
GEOJSONLINT = @GEOJSONLINT@
GJV = @GJV@
GPERF = @GPERF@
GPERF_VERSION = @GPERF_VERSION@
GREP = @GREP@
HAVE_ASAN = @HAVE_ASAN@
HAVE_C99 = @HAVE_C99@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
JING = @JING@
JQ = @JQ@
JSON_SED_NAN = @JSON_SED_NAN@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBOBJS = @LIBOBJS@
LIBREDWG_SO_VERSION = @LIBREDWG_SO_VERSION@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTEXEC = @LTEXEC@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARALLEL = @PARALLEL@
PATCH = @PATCH@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE2_CFLAGS = @PCRE2_CFLAGS@
PCRE2_LIBS = @PCRE2_LIBS@
PERL = @PERL@
PICAT = @PICAT@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PLATFORM_SITE_PKG = @PYTHON_PLATFORM_SITE_PKG@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RPMLINT = @RPMLINT@
RUN_JING = @RUN_JING@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHELLCHECK = @SHELLCHECK@
SHFMT = @SHFMT@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TARBALL_VERSION_FILE = @TARBALL_VERSION_FILE@
TIMEOUT = @TIMEOUT@
TIMEOUT_10 = @TIMEOUT_10@
TIMEOUT_30 = @TIMEOUT_30@
VALGRIND = @VALGRIND@
VALGRIND_ENABLED = @VALGRIND_ENABLED@
VALGRIND_SUPPRESSIONS = @VALGRIND_SUPPRESSIONS@
VALGRIND_SUPPRESSIONS_FILE = @VALGRIND_SUPPRESSIONS_FILE@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
WARN_SCANNERFLAGS = @WARN_SCANNERFLAGS@
WINE = @WINE@
XML2_CFLAGS = @XML2_CFLAGS@
XML2_LIBS = @XML2_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
logs_all = @logs_all@
makeinfo_version = @makeinfo_version@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
valgrind_enabled_tools = @valgrind_enabled_tools@
valgrind_tools = @valgrind_tools@
with_perl_install = @with_perl_install@
ACLOCAL_AMFLAGS = -I m4
SUBDIRS = src programs examples test $(am__append_1) $(am__append_2)
AM_DISTCHECK_CONFIGURE_FLAGS = --enable-release $(am__append_3)
DIST_SUBDIRS = $(SUBDIRS)
include_HEADERS = \
	include/dwg.h \
	include/dwg_api.h

pcdatadir = $(libdir)/pkgconfig
pcdata_DATA = libredwg.pc
BUILT_SOURCES = $(top_srcdir)/.version
VALGRIND_SUPPRESSIONS_FILES = @VALGRIND_SUPPRESSIONS_FILE@
VALGRIND_OPTS = --leak-check=full --show-reachable=no --num-callers=30
JSON_DIST = jsmn/jsmn.h jsmn/LICENSE jsmn/README.md
doc_DIST = README HACKING NEWS TODO
EXTRA_DIST = $(top_srcdir)/.version libredwg.spec vcpkg.json build-aux/Dockerfile \
	     dwg.in dxf.in dxf-allcvt.lsp dxf-allcvt.sh test-dxf.sh \
	     dxf-check dxfb-check json-check oda \
	     json.in log.in svg.in rw.in geojson.in \
	     logs-all-parallel.sh.in logs-all-serial.sh.in unknown.sh \
	     llvmfuzz_standalone_tz.sh llvmfuzz_standalone_data.sh \
	     cmp-objs.pl .dockerignore \
	     build-aux/swig_python.patch \
             $(JSON_DIST) \
	     $(VALGRIND_SUPPRESSIONS_FILES)

shell_sources = dwg.in dxf.in dxf-allcvt.sh test-dxf.sh dxf-check dxfb-check \
	json-check oda json.in log.in svg.in rw.in geojson.in \
	logs-all-parallel.sh.in logs-all-serial.sh.in unknown.sh \
	dynapi_test_all.sh.in unit_testing_all.sh.in \
	llvmfuzz_standalone_tz.sh llvmfuzz_standalone_data.sh \
	autogen.sh dxf-roundtrip.sh unit_testing_all.sh.in test-dxf.sh

# automake bug, GH #211 (howto enable skip_mode_fix? tried now info-in-builddir)
#distcheck-hook:
#	echo distcheck-hook distdir="$(distdir)"
#	chmod u+w "$(distdir)/doc"
#	chmod u+w "$(distdir)/doc/LibreDWG.info"
UNKNOWN_LOG = unknown-`git describe --long --tags --dirty --always`.log
UNKNOWN_SKIP = examples/alldwg.skip
WEB_DIR = $(srcdir)/../libredwg-web
TESTS = $(am__append_4) $(am__append_5)
@HAVE_RPMLINT_TRUE@@HAVE_SHELLCHECK_FALSE@TESTS_ENVIRONMENT = $(RPMLINT)
@HAVE_SHELLCHECK_TRUE@TESTS_ENVIRONMENT = $(SHELLCHECK)
SHFMT_FLAGS = -i 4 -p

# clang-analyzer.llvm.org, debian: clang-tools-{6.0,7}, redhat: clang-analyzer
SCAN_BUILD = scan-build
CLEANFILES = check-dwg.log check-dwg-valgrind.log check-dxf.log \
	check-dwg.log~ check-dwg-valgrind.log~ check-dxf.log~ \
	*_20*.dxf *_r1*.dxf example_*.dxf.log $(am__append_6)
DISTCLEANFILES = logs-all.sh dynapi_test_all.sh unit_testing_all.sh log json dwg dxf svg rw libredwg.pc vcpkg.json
MAINTAINERCLEANFILES = *~ *.log *.dxf *.json *.dwg cover_db .analysis
LIBTOOL_DISTCLEAN_FILES = \
	m4/libtool.m4 m4/ltoptions.m4 m4/ltsugar.m4 m4/ltversion.m4 m4/lt~obsolete.m4 \
	build-aux/compile \
	build-aux/config.guess \
	build-aux/config.sub \
	build-aux/depcomp \
	build-aux/install-sh \
	build-aux/ltmain.sh \
	build-aux/missing \
	build-aux/py-compile \
	build-aux/textinfo.tex

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libredwg.pc: $(top_builddir)/config.status $(srcdir)/libredwg.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
vcpkg.json: $(top_builddir)/config.status $(srcdir)/vcpkg.json.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
@DISABLE_BINDINGS_FALSE@@HAVE_PERL_TRUE@bindings/perl/Makefile.PL: $(top_builddir)/config.status $(top_srcdir)/bindings/perl/Makefile.PL.in
@DISABLE_BINDINGS_FALSE@@HAVE_PERL_TRUE@	cd $(top_builddir) && $(SHELL) ./config.status $@
logs-all.sh: $(top_builddir)/config.status 
	cd $(top_builddir) && $(SHELL) ./config.status $@
log: $(top_builddir)/config.status $(srcdir)/log.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
dwg: $(top_builddir)/config.status $(srcdir)/dwg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
dxf: $(top_builddir)/config.status $(srcdir)/dxf.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
json: $(top_builddir)/config.status $(srcdir)/json.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
geojson: $(top_builddir)/config.status $(srcdir)/geojson.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
svg: $(top_builddir)/config.status $(srcdir)/svg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
rw: $(top_builddir)/config.status $(srcdir)/rw.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
dynapi_test_all.sh: $(top_builddir)/config.status $(srcdir)/dynapi_test_all.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
unit_testing_all.sh: $(top_builddir)/config.status $(srcdir)/unit_testing_all.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-pcdataDATA: $(pcdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pcdata_DATA)'; test -n "$(pcdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pcdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pcdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pcdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pcdatadir)" || exit $$?; \
	done

uninstall-pcdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pcdata_DATA)'; test -n "$(pcdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pcdatadir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
check-valgrind-local: 
check-valgrind-memcheck-local: 
check-valgrind-helgrind-local: 
check-valgrind-drd-local: 
check-valgrind-sgcheck-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pcdatadir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
check-valgrind: check-valgrind-recursive

check-valgrind-am: check-valgrind-local

check-valgrind-drd: check-valgrind-drd-recursive

check-valgrind-drd-am: check-valgrind-drd-local

check-valgrind-helgrind: check-valgrind-helgrind-recursive

check-valgrind-helgrind-am: check-valgrind-helgrind-local

check-valgrind-memcheck: check-valgrind-memcheck-recursive

check-valgrind-memcheck-am: check-valgrind-memcheck-local

check-valgrind-sgcheck: check-valgrind-sgcheck-recursive

check-valgrind-sgcheck-am: check-valgrind-sgcheck-local

clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-libtool \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-pcdataDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-pcdataDATA

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-exec install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am check-valgrind-am \
	check-valgrind-drd-am check-valgrind-drd-local \
	check-valgrind-helgrind-am check-valgrind-helgrind-local \
	check-valgrind-local check-valgrind-memcheck-am \
	check-valgrind-memcheck-local check-valgrind-sgcheck-am \
	check-valgrind-sgcheck-local clean clean-cscope clean-generic \
	clean-libtool cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-hook dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip dist-zstd distcheck distclean \
	distclean-generic distclean-libtool distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-man install-pcdataDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-pcdataDATA

.PRECIOUS: Makefile

	build-aux/gendocs.sh build-aux/codecov_io.sh build-aux/smoke.sh \
	build-aux/clang-format-all.sh \
	programs/dwgfilter.in programs/alive.test.in programs/dxf.test.in \
	programs/json.test.in programs/svg.test.in \
	examples/dwgadd_test.sh.in

.PHONY: check-dwg check-dxf check-dxfb check-json check-dwg-valgrind check-svg \
	check-docker cppcheck log-dwg shfmt regen-shfmt check-shellcheck \
	check-minimal regen-swig-patch release-web \
        regen-man man manual refman scan-build gcov cover codecov coveralls \
	unknown regen-unknown full-regen-unknown regen-gperf regen-dynapi \
	maintainer-clean-local distuninstallcheck dist-hook

dist-hook:
	echo dist-hook distdir="$(distdir)"
	echo $(VERSION) > $(distdir)/.tarball-version

unknown:
	-mv examples/alldwg.skip examples/alldwg.skip~
	$(MAKE) -C src bits.lo && \
	  $(MAKE) -C examples unknown$(EXEEXT) bd$(EXEEXT) bits$(EXEEXT) && \
	  $(LTEXEC) examples/unknown$(EXEEXT) >$(UNKNOWN_LOG) 2>$(UNKNOWN_SKIP)
	if test -s examples/alldwg.skip; then true; \
	else mv examples/alldwg.skip~ examples/alldwg.skip; fi
@HAVE_INSRCDIR_FALSE@@HAVE_PICAT_TRUE@	ln -s $(srcdir)/unknown.pi unknown.pi
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	-rm examples/*.pi.tmplog 2>/dev/null
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	echo $(PARALLEL) $(TIMEOUT_30) $(PICAT) "{} \\>{}.tmplog ::: examples/[A-Z]*.pi"
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	-$(PARALLEL) $(TIMEOUT_30) $(PICAT) {} \>{}.tmplog ::: examples/[A-Z]*.pi
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	-for f in examples/*.pi.tmplog; do \
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	   if test -n "`grep 'Most probable result:' $$f`"; then \
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	     mv $$f examples/`basename $$f .tmplog`.log; fi; done
@HAVE_PARALLEL_TRUE@@HAVE_PICAT_TRUE@	-rm examples/*.pi.tmplog 2>/dev/null
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	-for f in examples/[A-Z]*.pi; do \
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	  echo $(TIMEOUT_30) picat $$f; \
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	  $(TIMEOUT_30) $(PICAT) $$f >$$f.tmplog; \
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	  if test -n "`grep 'Most probable result:' $$f.tmplog`"; then \
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	    mv $$f.tmplog $$f.log; fi; done
@HAVE_PARALLEL_FALSE@@HAVE_PICAT_TRUE@	-rm examples/[A-Z]*.pi.tmplog 2>/dev/null

regen-dynapi: $(srcdir)/src/gen-dynapi.pl $(srcdir)/include/dwg.h
	-$(PERL) $(srcdir)/src/gen-dynapi.pl
# $(MAKE) -C src $(abs_top_srcdir)/src/dxfclasses.c
regen-gperf:
	-cd $(abs_top_srcdir) && \
	  $(GPERF) --output-file src/dxfclasses.tmp.c src/dxfclasses.in && \
	  sed -e's,unsigned int hval = len;,unsigned int hval = len \& UINT_MAX;,' \
	      -e's,unsigned int len,size_t len,;' -e 's,register ,,g' <src/dxfclasses.tmp.c \
	                                                              >src/dxfclasses.c && \
	  rm -f src/dxfclasses.tmp.c && \
	  $(GPERF) --output-file src/objects.tmp.c src/objects.in && \
	  sed -e's,unsigned int hval = len;,unsigned int hval = len \& UINT_MAX;,' \
	      -e's,unsigned int len,size_t len,' -e's,register ,,g' <src/objects.tmp.c \
	                                                            >src/objects.c && \
	  rm -f src/objects.tmp.c
regen-unknown:
	$(MAKE) -C examples $@
full-regen-unknown:
	$(MAKE) -C examples $@
regen-man:
	$(MAKE) -C programs $@
man:
	$(MAKE) -C programs $@
manual:
	$(MAKE) -C doc $@
refman:
	$(MAKE) -C doc $@
regen-swig-patch:
@DISABLE_BINDINGS_FALSE@	$(MAKE) -C bindings/python
@DISABLE_BINDINGS_FALSE@	-difforig bindings/python/swig_python.c >xxxx
@DISABLE_BINDINGS_FALSE@	if test -s xxxx; then mv xxxx build-aux/swig_python.patch; fi
release-web: manual refman
	if test -d $(WEB_DIR)/manual; then \
	  rsync -avzC $(srcdir)/doc/manual/* $(WEB_DIR)/manual/; \
	  rsync -avzC doc/refman/* $(WEB_DIR)/refman/; \
	fi
	-cd $(WEB_DIR) && \
	  cvs add -m"new with $(VERSION)" manual/index.html manual/LibreDWG.* manual/html_node/*.html \
	    refman/*.{html,js,png} refman/search/*.{html,js}; cd -
	-cd $(WEB_DIR); cvs commit -m"update to $(VERSION)"; cd -
@HAVE_SHELLCHECK_TRUE@check-shellcheck:
@HAVE_SHELLCHECK_TRUE@	$(SHELLCHECK) $(TESTS)
# TEST_EXTENSIONS = .spec
# SPEC_LOG_COMPILER = $(RPMLINT)

check-minimal:
	$(MAKE) -C src
	$(MAKE) -C programs $@
	$(MAKE) -C test/unit-testing $@
check-dwg: all
	-mv check-dwg.log check-dwg.log~ 2>/dev/null
	for d in `find $(srcdir)/test/test-data -iname \*.dwg -size -40M`; do \
	  echo programs/dwgread -v3 $$d | tee -a check-dwg.log; \
	  $(LTEXEC) programs/dwgread -v3 $$d >> check-dwg.log 2>&1; \
	done
check-dwg-valgrind: all
	-mv check-dwg-valgrind.log check-dwg-valgrind.log~ 2>/dev/null
	for d in `find $(srcdir)/test/test-data -iname \*.dwg -size -10M`; do \
	  echo $(VALGRIND) $(VALGRIND_OPTS) $(VALGRIND_SUPPRESSIONS) programs/dwgread $$d | tee -a check-dwg-valgrind.log; \
	  $(VALGRIND) $(VALGRIND_OPTS) $(VALGRIND_SUPPRESSIONS) $(LTEXEC) programs/dwgread $$d >> check-dwg-valgrind.log 2>&1; \
	done
check-dxf: all
	-for f in $(srcdir)/test/test-data/Drawing_*.dwg \
                  $(srcdir)/test/test-data/sample_*.dwg \
                  $(srcdir)/test/test-data/example_*.dwg \
                  $(srcdir)/test/test-data/r*/entities*.dwg; \
          do \
            env MAKEFLAGS= $(srcdir)/dxf-check $$f; \
          done
	-for d in r14 2000 2004 2007 2010 2013 2018; do \
          for f in $(srcdir)/test/test-data/$$d/*.dwg; do \
            env MAKEFLAGS= $(srcdir)/dxf-check $$f; \
	  done; \
	done
check-dxfb: all
	-for f in $(srcdir)/test/test-data/Drawing_*.dwg \
                  $(srcdir)/test/test-data/sample_*.dwg \
                  $(srcdir)/test/test-data/example_*.dwg \
                  $(srcdir)/test/test-data/r*/entities*.dwg; \
          do \
            env MAKEFLAGS= $(srcdir)/dxfb-check $$f; \
          done
	-for d in r14 2000 2004 2007 2010 2013 2018; do \
          for f in $(srcdir)/test/test-data/$$d/*.dwg; do \
            env MAKEFLAGS= $(srcdir)/dxfb-check $$f; \
	  done; \
	done
check-json: all
	-for f in $(srcdir)/test/test-data/Drawing_*.dwg \
                  $(srcdir)/test/test-data/sample_*.dwg \
                  $(srcdir)/test/test-data/example_*.dwg \
                  $(srcdir)/test/test-data/r*/entities*.dwg; \
          do \
            env MAKEFLAGS= $(srcdir)/json-check $$f; \
          done
	-for d in r14 2000 2004 2007 2010 2013 2018; do \
          for f in $(srcdir)/test/test-data/$$d/*.dwg; do \
            env MAKEFLAGS= $(srcdir)/json-check $$f; \
	  done; \
	done
check-svg: all
	-for f in $(srcdir)/test/test-data/Drawing_*.dwg \
            $(srcdir)/test/test-data/sample_*.dwg \
            $(srcdir)/test/test-data/example_*.dwg \
	    $(srcdir)/test/test-data/r*/entities*.dwg; \
          do env MAKEFLAGS= ./svg $$f; done
	-for d in r14 2000 2004 2007 2010 2013 2018; do \
	   for f in $(srcdir)/test/test-data/$$d/*.dwg; \
       do env MAKEFLAGS= ./svg $$f; done; \
	done
check-docker: dist
	docker build --build-arg distdir="$(distdir)" --rm -t $(distdir) \
	             -f $(srcdir)/Dockerfile-dist .
cppcheck:
@HAVE_CPPCHECK_TRUE@	$(MAKE) -C src $@
@HAVE_CPPCHECK_TRUE@	$(MAKE) -C programs $@
@HAVE_CPPCHECK_TRUE@	$(MAKE) -C examples $@
@HAVE_CPPCHECK_TRUE@	$(CPPCHECK) -DDEBUG_CLASSES -DUSE_WRITE -DHAVE_SCANDIR -j4 --inline-suppr \
@HAVE_CPPCHECK_TRUE@		-I$(top_srcdir)/include -Isrc test/unit-testing/*.c
@HAVE_CPPCHECK_TRUE@	$(CPPCHECK) -DDEBUG -j4 --inline-suppr -I$(top_srcdir)/include -Isrc \
@HAVE_CPPCHECK_TRUE@		test/xmlsuite/*.c
shfmt:
@HAVE_SHFMT_TRUE@	for s in $(shell_sources); do \
@HAVE_SHFMT_TRUE@	  $(SHFMT) $(SHFMT_FLAGS) -d $(top_srcdir)/$$s; done
regen-shfmt:
@HAVE_SHFMT_TRUE@	for s in $(shell_sources); do \
@HAVE_SHFMT_TRUE@	  $(SHFMT) $(SHFMT_FLAGS) -w $(top_srcdir)/$$s; done

log-dwg: all
	find $(srcdir)/test/test-data $(srcdir)/test/test-old $(srcdir)/test/issues \
	     $(srcdir)/test/ossfuzz -type f -print0 -iname \*.dwg -size -40M | \
          xargs -0 -n1 -P8 ./log "$d"
	find $(srcdir)/test/ossfuzz/indwg* -type f -printf0 -size -40M | \
	  xargs -0 -n1 -P8 ./log "$d"

check-ossfuzz: all
	+find $(srcdir)/test/ossfuzz -type f -print0 -iname \*.dwg -size -40M | \
          xargs -0 -n1 -P8 ./log "$d"
	+find $(srcdir)/test/ossfuzz/indwg* -type f -print0 -size -40M | \
          xargs -0 -n1 -P8 ./log "$d"
	+find $(srcdir)/test/ossfuzz/outdxf* -type f -print0 -size -40M | \
          xargs -0 -n1 -P8 ./dxf "$d"
	+find $(srcdir)/test/ossfuzz/outjson -type f -print0 -size -40M | \
	  xargs -0 -n1 -P8 ./json "$d"
	+find $(srcdir)/test/ossfuzz/outgeojson -type f -print0 -size -40M | \
	  xargs -0 -n1 -P8 $(LTEXEC) programs/dwgread -Ogeojson -o/dev/null "$$d"
	+find $(srcdir)/test/ossfuzz/in{dxf,dxfb,json} -type f -size -40M | \
	  xargs -0 -n1 -P8 ./dwg "$d"
	+find $(srcdir)/test/ossfuzz/outsvg -type f -size -40M | \
	  xargs -0 -n1 -P8 ./svg "$d"
scan-build: clean
	$(SCAN_BUILD) -V -o $(srcdir)/.analysis $(MAKE) -j4 &

@ENABLE_GCOV_TRUE@gcov: check
@ENABLE_GCOV_TRUE@	$(MAKE) -C test gcov
@ENABLE_GCOV_TRUE@	$(MAKE) -C src gcov
@ENABLE_GCOV_TRUE@	$(MAKE) -C programs gcov
@ENABLE_GCOV_TRUE@	$(MAKE) -C examples gcov
@ENABLE_GCOV_TRUE@cover: gcov
@ENABLE_GCOV_TRUE@	gcov2perl test/*/*.gcov src/*.gcov programs/*.gcov examples/*.gcov
@ENABLE_GCOV_TRUE@	cover -no-gcov
@ENABLE_GCOV_TRUE@codecov: check
@ENABLE_GCOV_TRUE@	$(srcdir)/build-aux/codecov_io.sh -X test -X bindings
@ENABLE_GCOV_TRUE@coveralls: gcov
@ENABLE_GCOV_TRUE@	coveralls -e test -e bindings

compile_commands.json: Makefile
	+$(MAKE) clean
	bear -- make

$(BUILT_SOURCES):
	echo $(VERSION) > $@-t && mv $@-t $@

maintainer-clean-local:
	-rm -rf cover_db

# cannot uninstall the generated perllocal.pod and share/info/dir
distuninstallcheck:
	@:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
